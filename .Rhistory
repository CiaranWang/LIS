new_males   <- 1000*gen + c(1:nr_m)
for (gen in 0: 30)
{
new_males   <- 1000*gen + c(1:nr_m)
new_females <- 1000*gen + c(1:nr_f)
}
nr_m <- 100
nr_f <- 200
generation_interval_m <- 1
generation_interval_f <- 1
pedigree <- data.frame(id = integer(),
sire = integer(),
dam=integer())
for (gen in 0: 30)
{
new_males   <- 1000*gen + c(1:nr_m)
new_females <- 1000*gen + c(1:nr_f)
}
pedigree <- data.frame(id = integer(),
sire = integer(),
dam=integer())
for (gen in 0: 30)
{
new_males   <- 1000*gen + c(1:nr_m)
new_females <- 1000*gen + c(1:nr_f)
pedigree <- rbind(pedigree, new_males,new_females)
}
View(pedigree)
View(pedigree)
pedigree <- data.frame(id = integer(),
sire = integer(),
dam=integer())
for (gen in 0: 30)
{
new_males   <- 1000*gen + c(1:nr_m)
new_females <- 1000*gen + nr_m+ c(1:nr_f)
pedigree <- cbind(pedigree, new_males,new_females)
}
pedigree <- data.frame(id = integer(),
sire = integer(),
dam=integer())
for (gen in 0: 30)
{
new_males   <- 1000*gen + c(1:nr_m)
new_females <- 1000*gen + nr_m+ c(1:nr_f)
pedigree <- rbind(pedigree, new_males,new_females)
}
View(pedigree)
sires_gen <- gen - generation_interval_m
sires_id_range <- 1000*sires_gen + c(1:nr_m)
sires <- sample(sires_id_range, replace = FALSE)
sires <- sample(sires_id_range, replace = TRUE)
sires <- sample(sires_id_range, replace = FALSE)
sample(c(1:5),replace = TRUE)
sample(c(1:5),5,replace = TRUE)
sample(c(1:5),5,replace = FALSE)
sample(c(1:5),5,replace = FALSE)
sample(c(1:5),5,replace = FALSE)
sample(c(1:5),5,replace = TRUE)
sample(c(1:5),5,replace = TRUE)
sample(c(1:5),5,replace = TRUE)
sample(c(1:5),5,replace = TRUE)
sample(c(1:5),5,replace = TRUE)
A <- 1
B <- 1
C<- 1
f1 <- A / (1+ (x/C)^B)
f1 <- A / (1+ (1/C)^B)
2^5
A <- 1
B <- 1
C<- 1
logistic1 <- function(input)
{
output <- f1 <- A / (1+ (input/C)^B)
return(output)
}
logistic1(0)
A <- 1
B <- 1
C<- 1
logistic1 <- function(input)
{
output <- f1 <- A / (1+ (input/C)^B)
return(output)
}
logistic1(0)
A <- 1
B <- 1
C<- 1
logistic1 <- function(input)
{
output <- A / (1+ (input/C)^B)
return(output)
}
logistic1(0)
A <- 1
B <- 1
C<- 1
f1 <- function(input)
{
output <- A / (1+ (C/input)^B)
return(output)
}
f1(0)
1/0
f1(1)
f1 <- function(input)
{
output <- A1 / (1 + (C1 / input) ^ B1)
return(output)
}
f2 <- function(input)
{
output <- A2 / (1 + (C2 / input) ^ B2)
return(output)
}
df1 <- function(input)
{
part1 <- (1 + (C1 / input) ^ B1)^2
part2 <- input ^ (-B1-1)
output <- A1 * B1  * C1^B1 *  part2 / part1
return(output)
}
df2 <- function(input)
{
part1 <- (1 + (C2 / input) ^ B2)^2
part2 <- input ^ (-B2-1)
output <- A2 * B2  * C2^B2 *  part2 / part1
return(output)
}
start <- 0
end <- 1000
x_list <- c()
y_list <- c()
for (i in 1:100 0000)
{
step <- (end - start)/100 0000
x <- start + step*i
y <- df1(x) + df2(x)
x_list <- c(x_list, x)
y_list <- c(y_list, y)
}
start <- 0
end <- 1000
x_list <- c()
y_list <- c()
loops <- 1000000
for (i in 1:loops)
{
step <- (end - start)/loops
x <- start + step*i
y <- df1(x) + df2(x)
x_list <- c(x_list, x)
y_list <- c(y_list, y)
}
A1 <- 1
B1 <- 1
C1 <- 1
A2 <- 1
B2 <- 1
C2 <- 1
f1 <- function(input)
{
output <- A1 / (1 + (C1 / input) ^ B1)
return(output)
}
f2 <- function(input)
{
output <- A2 / (1 + (C2 / input) ^ B2)
return(output)
}
df1 <- function(input)
{
part1 <- (1 + (C1 / input) ^ B1)^2
part2 <- input ^ (-B1-1)
output <- A1 * B1  * C1^B1 *  part2 / part1
return(output)
}
df2 <- function(input)
{
part1 <- (1 + (C2 / input) ^ B2)^2
part2 <- input ^ (-B2-1)
output <- A2 * B2  * C2^B2 *  part2 / part1
return(output)
}
start <- 0
end <- 1000
x_list <- c()
y_list <- c()
loops <- 1000000
for (i in 1:loops)
{
step <- (end - start)/loops
x <- start + step*i
y <- df1(x) + df2(x)
x_list <- c(x_list, x)
y_list <- c(y_list, y)
}
start <- 0
end <- 1000
x_list <- c()
y_list <- c()
loops <- 10000
for (i in 1:loops)
{
step <- (end - start)/loops
x <- start + step*i
y <- df1(x) + df2(x)
x_list <- c(x_list, x)
y_list <- c(y_list, y)
}
plot(y_list, x_list)
start <- 0
end <- 1000
x_list <- c()
y_list <- c()
loops <- 10000
for (i in 1:loops)
{
step <- (end - start)/loops
x <- start + step*i
setwd("C:/Users/wang273/source/repos/LIS")
setwd("C/Users/wang273/source/repos/LIS")
setwd("C://Users/wang273/source/repos/LIS")
in <- read.table("input_example.txt", header=TRUE)
indata <- read.table("input_example.txt", header=TRUE)
outdata<- read.table("test_output.txt", header = TRUE)
merged_1 <- merge(outdata, indata, by = outdata$performer)
merged_1 <- merge(outdata, indata, by = outdata$performer)
merged_1 <- merge(outdata, indata, by.x = names(outdata)[1], by.y = names(indata)[1], all=TRUE)
head(merged_1)
merged_1$diff_pen = merged_1$pen - merged_1$Pen
table(merged_1$diff_pen)
merged_2 <- merge(outdata, indata, by.x = names(outdata)[2], by.y = names(indata)[1], all=TRUE)
merged_2$diff_pen = merged_2$pen - merged_2$Pen
table(merged_2$diff_pen)
setwd("C://Users/wang273/source/repos/LIS")
indata <- read.table("input_example.txt", header=TRUE)
outdata<- read.table("test_output.txt", header = TRUE)
merged_1 <- merge(outdata, indata, by.x = names(outdata)[1], by.y = names(indata)[1], all=TRUE)
merged_1$diff_pen = merged_1$pen - merged_1$Pen
table(merged_1$diff_pen)
merged_2 <- merge(outdata, indata, by.x = names(outdata)[2], by.y = names(indata)[1], all=TRUE)
merged_2$diff_pen = merged_2$pen - merged_2$Pen
table(merged_2$diff_pen)
